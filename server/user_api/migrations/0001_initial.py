# Generated by Django 5.1.2 on 2024-11-07 12:08

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(max_length=20, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, related_name='usercredentials_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usercredentials_set', to='auth.permission')),
            ],
            options={
                'db_table': 'user_credentials',
                'ordering': ['user_id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('client_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'clients',
                'ordering': ['client_id'],
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'roles',
                'ordering': ['role_id'],
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=100)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.clients')),
            ],
            options={
                'db_table': 'projects',
                'ordering': ['project_id'],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.clients')),
                ('project_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user_api.projects')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.roles')),
            ],
            options={
                'db_table': 'users',
                'ordering': ['user_id'],
            },
        ),
    ]
